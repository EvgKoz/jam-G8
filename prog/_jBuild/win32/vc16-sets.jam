#  Setup for VC 2019 compiler for Win32 (to be included from jBuild.jam)

_OBJ_SUFFIX  = .obj ;

_CLANG_DIR   = $(_DEVTOOL)/LLVM-$(CLangVer) ;

_VC_DIR      = $(_DEVTOOL)/vc2019 ;
if $(VCUpdateVer) { _VC_DIR = $(_VC_DIR)_$(VCUpdateVer) ; }
include $(Root)/prog/_jBuild/_vc/win_sdk.jam ;
_PREFAST_DIR = $(_DEVTOOL)/prefast ;
_VC_CRT_TYPE = -MT ;

if ! [ GLOB $(_VC_DIR) : * ] { exit FATAL\: \"$(_VC_DIR)\" not found!  Please, update DEVTOOLS ; }
if ! [ GLOB $(_WIN_SDK) : * ] { exit FATAL\: \"$(_WIN_SDK)\" not found!  Please, update DEVTOOLS ; }
if ! [ GLOB $(_DEVTOOL)/win.sdk.100/Include/10.0.19041.0 : * ] { exit FATAL\: \"$(_DEVTOOL)/win.sdk.100/Include/10.0.19041.0\" not found!  Please, update DEVTOOLS ; }

local _DEF_C_CMDLINE =
  -X /D_TARGET_PC=1 -D_TARGET_PC_WIN=1 -D_TARGET_CPU_IA32=1 /D__IA32__=1 /DWIN32 /Dasm=__asm /DWIN32_LEAN_AND_MEAN= /D_USE_MATH_DEFINES
  /DNOMINMAX
  -D_TARGET_SIMD_SSE=$(SSEVersion) -D_ALLOW_KEYWORD_MACROS=
  /D_USING_V110_SDK71_
  /DDELAYIMP_INSECURE_WRITABLE_HOOKS
  -Di_strlen=strlen
  /c /nologo /Zc:forScope /Zp8 /J
  /Zc:inline /bigobj /Zc:wchar_t
;

if $(UseWholeOpt) = yes {
  UseLLDLink = no ;
}

if $(UseLLDLink) != yes {
  _LINK         = $(_VC_DIR)/bin/Hostx64/x86/link.exe /machine:x86 ;
  _LIB          = $(_VC_DIR)/bin/Hostx64/x86/lib.exe /machine:x86 ;
} else
{
  _LINK         = $(_CLANG_DIR)/bin/lld-link.exe /machine:x86 ;
  _LIB          = $(_CLANG_DIR)/bin/lld-link.exe /lib /machine:x86 ;
}

_C_COMPILER   = $(_VC_DIR)/bin/Hostx86/x86/cl.exe $(_DEF_C_CMDLINE) ;
_CPP_COMPILER = $(_C_COMPILER) /std:c++$(CPPStd) ;
_ASM_COMPILER = $(_DEVTOOL)/nasm/nasmw.exe -f win32 ;
_MASM_COMPILER = $(_VC_DIR)/bin/Hostx86/x86/ml.exe -c -nologo ;

_RC_COMPILER    = $(_WIN_SDK_BIN)/rc.exe /x /i$(_WIN_SDK_INC) /i$(_VC_DIR)/Include ;
_MT_UTIL        = $(_WIN_SDK_BIN)/mt.exe ;
_CVTRES_EXE     = $(_VC_DIR)/bin/Hostx86/x86/cvtres.exe /MACHINE:x86 /NOLOGO ;
_UM_LIB         = $(_DEVTOOL)/win.sdk.100/Lib/10.0.19041.0/um/x86 ;
_UCRT_LIB       = $(_DEVTOOL)/win.sdk.100/Lib/10.0.19041.0/ucrt/x86 ;
_UCRT_INC       = $(_DEVTOOL)/win.sdk.100/Include/10.0.19041.0/ucrt ;
_UCRT_SRC_INC   = $(_DEVTOOL)/win.sdk.100/source/10.0.19041.0/ucrt/inc ;

_INCLUDE      = $(_WIN_SDK_INC) $(_VC_DIR)/include $(_UCRT_INC) ;
_LIBPATH      = $(_UCRT_LIB) $(_WIN_SDK_LIB) $(_VC_DIR)/lib/x86/ ;

if ! $(_UM_LIB:L) in $(_LIBPATH:L) {
  _LIBPATH += $(_UM_LIB) ;
}


# make linker cmd-line ###
for lib in $(_LIBPATH) {
  _LINK += -libpath:$(lib) ;
  _LIB += -libpath:$(lib) ;
}

# make compiler cmd-line ###
_CPP_BASE_INCLUDES = -I$(MasterPreInclude) -I$(Root)/prog/dagorInclude -I$(Root)/prog/1stPartyLibs -I$(Root)/prog/3rdPartyLibs -I$(Root)/prog/3rdPartyLibs/eastl/include ;
_C_BASE_INCLUDES   = -I$(MasterPreInclude) -I$(Root)/prog/dagorInclude -I$(Root)/prog/1stPartyLibs -I$(Root)/prog/3rdPartyLibs ;

for inc in $(_INCLUDE) {
  _CPP_BASE_INCLUDES += -I$(inc) ;
  _C_BASE_INCLUDES   += -I$(inc) ;
}

_DEF_C_CMDLINE = ;
